name: Release resource pack

on:
  workflow_dispatch:

jobs:
  prepare_to_send_zip:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.versions.outputs.new_version }}
      old_version: ${{ steps.versions.outputs.old_version }}
      zip_name: ${{ steps.zip_name.outputs.zip_name }}

    steps:
      - uses: actions/checkout@v2

      - name: Set versions
        id: versions
        run: |
          OLD_VERSION=$(grep -o -m 1 -E "(v[0-9]+\.){1}[0-9]+(\.[0-9]+)?" pack.mcmeta)
          echo ::set-output name=old_version::$OLD_VERSION
          echo "Old Version: $OLD_VERSION"
          NEW_VERSION=$(grep -o -m 1 -E "(v[0-9]+\.){1}[0-9]+(\.[0-9]+)?" UpdatedLog.md)
          echo ::set-output name=new_version::$NEW_VERSION
          echo "New Version: $NEW_VERSION"

      - name: Check versions
        run: |
          OLD_VER=$(echo ${{ steps.versions.outputs.old_version }} | sed -e "s/v//")
          NEW_VER=$(echo ${{ steps.versions.outputs.new_version }} | sed -e "s/v//")

          if [ 1 -eq "$(echo "${OLD_VER} >= ${NEW_VER}" | bc)" ]; then
            echo "バージョン番号が正しくありません。"
            exit 1
          fi

      - name: Create Branch
        run: |
          git checkout -b release
          git push --set-upstream origin release

      - name: Update version of pack.mcmeta
        run: sed -i -r "s/(v[0-9]+\.){1}[0-9]+(\.[0-9]+)?/${{ steps.versions.outputs.new_version }}/" pack.mcmeta

      - name: Commit a change
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add -A
          git commit -m "[Bump] ${{ steps.versions.outputs.old_version }} -> ${{ steps.versions.outputs.new_version }}"

      - name: Create release PR
        id: create_release_pr
        uses: peter-evans/create-pull-request@v3
        with:
          branch: release
          base: main
          title: "Release ${{ steps.versions.outputs.new_version }}"
          body: "This PR was created by GitHub Actions to release zip automatically."

      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.create_release_pr.outputs.pull-request-number }}

      - name: Create Tag
        run: |
          git checkout main
          git pull origin main
          git tag ${{ steps.versions.outputs.new_version }}
          git push origin main --tags

      - name: Set zip file name
        id: zip_name
        run: |
          ZIP_NAME=$(echo "seichi_tex_${{ steps.versions.outputs.new_version }}.zip")
          echo ::set-output name=zip_name::$ZIP_NAME
          echo "Zip file name: $ZIP_NAME"

      - name: Make zip
        run: zip -r ${{ steps.zip_name.outputs.zip_name }} *

      - uses: actions/upload-artifact@v2
        with:
          name: zip_file
          path: ${{ steps.zip_name.outputs.zip_name }}

  send_zip:
    runs-on: ubuntu-latest
    needs: prepare_to_send_zip

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: zip_file

      - name: Send zip to server
        run: echo "Unimplemnted."

  make_github_release:
    runs-on: ubuntu-latest
    needs: prepare_to_send_zip

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: zip_file

      - name: Extract release notes from UpdatedLog.md
        run: |
          sudo apt-get update && sudo apt-get install pcre2-utils -y
          pcre2grep -M "##[\s\S]*?(?=## ${{ needs.prepare_to_send_zip.outputs.old_version }})" UpdatedLog.md | sed '${/^$/d;}' > note.md

      - uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ needs.prepare_to_send_zip.outputs.zip_name }}
          bodyFile: "note.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.prepare_to_send_zip.outputs.new_version }}
